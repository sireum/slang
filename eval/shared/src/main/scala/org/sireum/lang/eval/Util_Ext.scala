/*
 Copyright (c) 2017-2024, Robby, Kansas State University
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:

 1. Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package org.sireum.lang.eval

import org.sireum.$internal.MutableMarker
import org.sireum._
import org.sireum.lang.{ast => AST}

object Util_Ext {

  def getType(o: Any): State.Type = {
    o match {
      case o: Product =>
        var isImmutable = T
        for (i <- 1 to o.productArity if isImmutable) {
          if (o.productElement(i - 1).isInstanceOf[MutableMarker]) {
            isImmutable = F
          }
        }
        return State.Type.Tuple(isImmutable, o.productArity)
      case _: B | _: Boolean => return State.Type.B
      case _: Z => return State.Type.Z
      case _: C | _: Int => return State.Type.C
      case _: F32 | _: Float => return State.Type.F32
      case _: F64 | _: Double => return State.Type.F64
      case _: R => return State.Type.R
      case _: String | _: Predef.String => return State.Type.String
      case _: ST => return State.Type.ST
      case _: Unit => return State.Type.Unit
      case _: IS[_, _] => return State.Type.IS
      case _: MS[_, _] => return State.Type.MS
      case _ =>
    }
    halt("TODO")
  }

  @pure def lookupIndex(s: State.Value, i: State.Value): State.Value = {
    val index = extractValue[ZLike[_]](i)
    val o = extractValue[Any](s)
    o match {
      case o: MS[_, _] =>
        if (o.companion.isZeroIndex) {
          val r = o.asInstanceOf[MS[Any, Any]].apply(index)
          return State.Value.Native(getType(r), 0, r)
        } else {
          halt("TODO")
        }
      case o: IS[_, _] =>
        if (o.companion.isZeroIndex) {
          val r = o.asInstanceOf[IS[Any, Any]].apply(index)
          return State.Value.Native(getType(r), 0, r)
        } else {
          halt("TODO")
        }
      case _ => halt(s"Infeasible: $o")
    }
  }
  def updateIndex(o: State.Value, i: State.Value, v: State.Value): Unit = {
    val ms = extractValue[MS[Any, Any]](o)
    val index = extractValue[ZLike[_]](i)
    if (ms.companion.isZeroIndex) {
      ms.update(index, extractValue(v))
    } else {
      halt("TODO")
    }
  }
  @pure def tupleAccess(o: State.Value, field: String): State.Value = {
    val n = ops.StringOps(field).substring(1, field.size).value.toInt
    val p = extractValue[Product](o)
    val r = p.productElement(n)
    State.Value.Native(getType(r), 0, r)
  }
  @pure def unitValue: State.Value = State.Value.Native(State.Type.Unit, 0, ())
  @pure def unaryBits(op: AST.Exp.UnaryOp.Type, v: State.Value): State.Value =
    op match {
      case AST.Exp.UnaryOp.Complement => State.Value.Native(v.tipe, 0, ~extractValue[Z.BV[_]](v))
      case AST.Exp.UnaryOp.Minus => State.Value.Native(v.tipe, 0, -extractValue[Z.BV[_]](v))
      case _ => halt(s"Infeasible: $op")
    }
  @pure def binaryBitsH[T <: Z.BV[T]](left: T, op: String, right: T): Any = {
    return op.value match {
      case "+" => left + right
      case "-" => left - right
      case "*" => left * right
      case "/" => left / right
      case "%" => left % right
      case "≡" => left == right
      case "≢" => left != right
      case "<" => left < right
      case ">" => left > right
      case "<=" => left <= right
      case ">=" => left >= right
      case ">>" => left >> right
      case ">>>" => left >>> right
      case "<<" => left >> right
      case "&" => left & right
      case "|" => left | right
      case "|^" => left |^ right
      case _ => halt(s"Infeasible: $op")
    }
  }
  @pure def binaryBits(left: State.Value, op: String, right: State.Value): State.Value =
    State.Value.Native(left.tipe, 0, binaryBitsH(extractValue(left), op.value, extractValue(right)))
  @pure def extractValue[O](v: State.Value): O = v.asInstanceOf[State.Value.Native[_]].value.asInstanceOf[O]
  @pure def dropRight[T](s: ISZ[T]): ISZ[T] = new IS(s.companion, s.data, s.length - 1, s.boxer)
  @pure def deepClone(v: State.Value): State.Value = State.Value.Native[MutableMarker](v.tipe, 0,
    v.asInstanceOf[State.Value.Native[_]].value.asInstanceOf[MutableMarker].$clone)
  @pure def append(s: State.Value, e: State.Value): State.Value = {
    assert(s.isNative && e.isNative)
    if (s.tipe.isImmutable)
      State.Value.Native(s.tipe, 0, extractValue[IS[ZLike[_], Any]](s) :+ extractValue[Any](e))
    else
      State.Value.Native(s.tipe, 0, extractValue[MS[ZLike[_], Any]](s) :+ extractValue[Any](e))
  }
  @pure def prepend(e: State.Value, s: State.Value): State.Value = {
    assert(e.isNative && s.isNative)
    if (s.tipe.isImmutable)
      State.Value.Native(s.tipe, 0, extractValue[Any](e) +: extractValue[IS[ZLike[_], Any]](s))
    else
      State.Value.Native(s.tipe, 0, extractValue[Any](e) +: extractValue[MS[ZLike[_], Any]](s))
  }
  @pure def appendAll(s1: State.Value, s2: State.Value): State.Value = {
    assert(s1.isNative && s2.isNative)
    if (s1.tipe.isImmutable)
      State.Value.Native(s1.tipe, 0, extractValue[IS[ZLike[_], Any]](s1) ++ extractValue[IS[ZLike[_], Any]](s2))
    else
      State.Value.Native(s1.tipe, 0, extractValue[MS[ZLike[_], Any]](s1) ++ extractValue[MS[ZLike[_], Any]](s2))
  }
  def tuple2(v1: State.Value, v2: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 2), 0, (extractValue(v1), extractValue(v2)))
  }
  def tuple3(v1: State.Value, v2: State.Value, v3: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 3), 0, (extractValue(v1), extractValue(v2), extractValue(v3)))
  }
  def tuple4(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 4), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4)))
  }
  def tuple5(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 5), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5)))
  }
  def tuple6(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 6), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6)))
  }
  def tuple7(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 7), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7)))
  }
  def tuple8(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 8), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8)))
  }
  def tuple9(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 9), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9)))
  }
  def tuple10(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 10), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10)))
  }
  def tuple11(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 11), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11)))
  }
  def tuple12(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 12), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12)))
  }
  def tuple13(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 13), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13)))
  }
  def tuple14(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value, v14: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable && v14.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 14), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13), extractValue(v14)))
  }
  def tuple15(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value, v14: State.Value, v15: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable && v14.tipe.isImmutable && v15.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 15), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13), extractValue(v14), extractValue(v15)))
  }
  def tuple16(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value, v14: State.Value, v15: State.Value, v16: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable && v14.tipe.isImmutable && v15.tipe.isImmutable && v16.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 16), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13), extractValue(v14), extractValue(v15), extractValue(v16)))
  }
  def tuple17(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value, v14: State.Value, v15: State.Value, v16: State.Value, v17: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable && v14.tipe.isImmutable && v15.tipe.isImmutable && v16.tipe.isImmutable && v17.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 17), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13), extractValue(v14), extractValue(v15), extractValue(v16), extractValue(v17)))
  }
  def tuple18(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value, v14: State.Value, v15: State.Value, v16: State.Value, v17: State.Value, v18: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable && v14.tipe.isImmutable && v15.tipe.isImmutable && v16.tipe.isImmutable && v17.tipe.isImmutable && v18.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 18), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13), extractValue(v14), extractValue(v15), extractValue(v16), extractValue(v17), extractValue(v18)))
  }
  def tuple19(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value, v14: State.Value, v15: State.Value, v16: State.Value, v17: State.Value, v18: State.Value, v19: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable && v14.tipe.isImmutable && v15.tipe.isImmutable && v16.tipe.isImmutable && v17.tipe.isImmutable && v18.tipe.isImmutable && v19.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 19), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13), extractValue(v14), extractValue(v15), extractValue(v16), extractValue(v17), extractValue(v18), extractValue(v19)))
  }
  def tuple20(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value, v14: State.Value, v15: State.Value, v16: State.Value, v17: State.Value, v18: State.Value, v19: State.Value, v20: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable && v14.tipe.isImmutable && v15.tipe.isImmutable && v16.tipe.isImmutable && v17.tipe.isImmutable && v18.tipe.isImmutable && v19.tipe.isImmutable && v20.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 20), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13), extractValue(v14), extractValue(v15), extractValue(v16), extractValue(v17), extractValue(v18), extractValue(v19), extractValue(v20)))
  }
  def tuple21(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value, v14: State.Value, v15: State.Value, v16: State.Value, v17: State.Value, v18: State.Value, v19: State.Value, v20: State.Value, v21: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable && v14.tipe.isImmutable && v15.tipe.isImmutable && v16.tipe.isImmutable && v17.tipe.isImmutable && v18.tipe.isImmutable && v19.tipe.isImmutable && v20.tipe.isImmutable && v21.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 21), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13), extractValue(v14), extractValue(v15), extractValue(v16), extractValue(v17), extractValue(v18), extractValue(v19), extractValue(v20), extractValue(v21)))
  }
  def tuple22(v1: State.Value, v2: State.Value, v3: State.Value, v4: State.Value, v5: State.Value, v6: State.Value, v7: State.Value, v8: State.Value, v9: State.Value, v10: State.Value, v11: State.Value, v12: State.Value, v13: State.Value, v14: State.Value, v15: State.Value, v16: State.Value, v17: State.Value, v18: State.Value, v19: State.Value, v20: State.Value, v21: State.Value, v22: State.Value): State.Value = {
    val isImmutable = v1.tipe.isImmutable && v2.tipe.isImmutable && v3.tipe.isImmutable && v4.tipe.isImmutable && v5.tipe.isImmutable && v6.tipe.isImmutable && v7.tipe.isImmutable && v8.tipe.isImmutable && v9.tipe.isImmutable && v10.tipe.isImmutable && v11.tipe.isImmutable && v12.tipe.isImmutable && v13.tipe.isImmutable && v14.tipe.isImmutable && v15.tipe.isImmutable && v16.tipe.isImmutable && v17.tipe.isImmutable && v18.tipe.isImmutable && v19.tipe.isImmutable && v20.tipe.isImmutable && v21.tipe.isImmutable && v22.tipe.isImmutable
    State.Value.Native(State.Type.Tuple(isImmutable, 22), 0, (extractValue(v1), extractValue(v2), extractValue(v3), extractValue(v4), extractValue(v5), extractValue(v6), extractValue(v7), extractValue(v8), extractValue(v9), extractValue(v10), extractValue(v11), extractValue(v12), extractValue(v13), extractValue(v14), extractValue(v15), extractValue(v16), extractValue(v17), extractValue(v18), extractValue(v19), extractValue(v20), extractValue(v21), extractValue(v22)))
  }
  def invoke0(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value): State.Value = Util.toValue(tipe, reflection.invoke0(owner, name, extractValue(receiver)))
  def invoke1(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value): State.Value = Util.toValue(tipe, reflection.invoke1(owner, name, extractValue(receiver), extractValue(o1)))
  def invoke2(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value): State.Value = Util.toValue(tipe, reflection.invoke2(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2)))
  def invoke3(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value): State.Value = Util.toValue(tipe, reflection.invoke3(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3)))
  def invoke4(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value): State.Value = Util.toValue(tipe, reflection.invoke4(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4)))
  def invoke5(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value): State.Value = Util.toValue(tipe, reflection.invoke5(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5)))
  def invoke6(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value): State.Value = Util.toValue(tipe, reflection.invoke6(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6)))
  def invoke7(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value): State.Value = Util.toValue(tipe, reflection.invoke7(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7)))
  def invoke8(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value): State.Value = Util.toValue(tipe, reflection.invoke8(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8)))
  def invoke9(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value): State.Value = Util.toValue(tipe, reflection.invoke9(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9)))
  def invoke10(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value): State.Value = Util.toValue(tipe, reflection.invoke10(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10)))
  def invoke11(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value): State.Value = Util.toValue(tipe, reflection.invoke11(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11)))
  def invoke12(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value): State.Value = Util.toValue(tipe, reflection.invoke12(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12)))
  def invoke13(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value): State.Value = Util.toValue(tipe, reflection.invoke13(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13)))
  def invoke14(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value): State.Value = Util.toValue(tipe, reflection.invoke14(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14)))
  def invoke15(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value): State.Value = Util.toValue(tipe, reflection.invoke15(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15)))
  def invoke16(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value): State.Value = Util.toValue(tipe, reflection.invoke16(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16)))
  def invoke17(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value): State.Value = Util.toValue(tipe, reflection.invoke17(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17)))
  def invoke18(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value): State.Value = Util.toValue(tipe, reflection.invoke18(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18)))
  def invoke19(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value): State.Value = Util.toValue(tipe, reflection.invoke19(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19)))
  def invoke20(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value): State.Value = Util.toValue(tipe, reflection.invoke20(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20)))
  def invoke21(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value): State.Value = Util.toValue(tipe, reflection.invoke21(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21)))
  def invoke22(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value): State.Value = Util.toValue(tipe, reflection.invoke22(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22)))
  def invoke23(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value): State.Value = Util.toValue(tipe, reflection.invoke23(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23)))
  def invoke24(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value): State.Value = Util.toValue(tipe, reflection.invoke24(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24)))
  def invoke25(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value): State.Value = Util.toValue(tipe, reflection.invoke25(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25)))
  def invoke26(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value): State.Value = Util.toValue(tipe, reflection.invoke26(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26)))
  def invoke27(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value): State.Value = Util.toValue(tipe, reflection.invoke27(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27)))
  def invoke28(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value): State.Value = Util.toValue(tipe, reflection.invoke28(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28)))
  def invoke29(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value, o29: State.Value): State.Value = Util.toValue(tipe, reflection.invoke29(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28), extractValue(o29)))
  def invoke30(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value, o29: State.Value, o30: State.Value): State.Value = Util.toValue(tipe, reflection.invoke30(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28), extractValue(o29), extractValue(o30)))
  def invoke31(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value, o29: State.Value, o30: State.Value, o31: State.Value): State.Value = Util.toValue(tipe, reflection.invoke31(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28), extractValue(o29), extractValue(o30), extractValue(o31)))
  def invoke32(reflection: Reflection, tipe: State.Type, owner: String, name: String, receiver: State.Value, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value, o29: State.Value, o30: State.Value, o31: State.Value, o32: State.Value): State.Value = Util.toValue(tipe, reflection.invoke32(owner, name, extractValue(receiver), extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28), extractValue(o29), extractValue(o30), extractValue(o31), extractValue(o32)))
  def invokeStatic0(reflection: Reflection, tipe: State.Type, owner: String, name: String): State.Value = Util.toValue(tipe, reflection.invokeStatic0(owner, name))
  def invokeStatic1(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic1(owner, name, extractValue(o1)))
  def invokeStatic2(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic2(owner, name, extractValue(o1), extractValue(o2)))
  def invokeStatic3(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic3(owner, name, extractValue(o1), extractValue(o2), extractValue(o3)))
  def invokeStatic4(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic4(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4)))
  def invokeStatic5(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic5(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5)))
  def invokeStatic6(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic6(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6)))
  def invokeStatic7(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic7(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7)))
  def invokeStatic8(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic8(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8)))
  def invokeStatic9(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic9(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9)))
  def invokeStatic10(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic10(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10)))
  def invokeStatic11(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic11(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11)))
  def invokeStatic12(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic12(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12)))
  def invokeStatic13(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic13(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13)))
  def invokeStatic14(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic14(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14)))
  def invokeStatic15(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic15(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15)))
  def invokeStatic16(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic16(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16)))
  def invokeStatic17(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic17(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17)))
  def invokeStatic18(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic18(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18)))
  def invokeStatic19(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic19(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19)))
  def invokeStatic20(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic20(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20)))
  def invokeStatic21(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic21(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21)))
  def invokeStatic22(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic22(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22)))
  def invokeStatic23(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic23(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23)))
  def invokeStatic24(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic24(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24)))
  def invokeStatic25(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic25(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25)))
  def invokeStatic26(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic26(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26)))
  def invokeStatic27(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic27(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27)))
  def invokeStatic28(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic28(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28)))
  def invokeStatic29(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value, o29: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic29(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28), extractValue(o29)))
  def invokeStatic30(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value, o29: State.Value, o30: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic30(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28), extractValue(o29), extractValue(o30)))
  def invokeStatic31(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value, o29: State.Value, o30: State.Value, o31: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic31(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28), extractValue(o29), extractValue(o30), extractValue(o31)))
  def invokeStatic32(reflection: Reflection, tipe: State.Type, owner: String, name: String, o1: State.Value, o2: State.Value, o3: State.Value, o4: State.Value, o5: State.Value, o6: State.Value, o7: State.Value, o8: State.Value, o9: State.Value, o10: State.Value, o11: State.Value, o12: State.Value, o13: State.Value, o14: State.Value, o15: State.Value, o16: State.Value, o17: State.Value, o18: State.Value, o19: State.Value, o20: State.Value, o21: State.Value, o22: State.Value, o23: State.Value, o24: State.Value, o25: State.Value, o26: State.Value, o27: State.Value, o28: State.Value, o29: State.Value, o30: State.Value, o31: State.Value, o32: State.Value): State.Value = Util.toValue(tipe, reflection.invokeStatic32(owner, name, extractValue(o1), extractValue(o2), extractValue(o3), extractValue(o4), extractValue(o5), extractValue(o6), extractValue(o7), extractValue(o8), extractValue(o9), extractValue(o10), extractValue(o11), extractValue(o12), extractValue(o13), extractValue(o14), extractValue(o15), extractValue(o16), extractValue(o17), extractValue(o18), extractValue(o19), extractValue(o20), extractValue(o21), extractValue(o22), extractValue(o23), extractValue(o24), extractValue(o25), extractValue(o26), extractValue(o27), extractValue(o28), extractValue(o29), extractValue(o30), extractValue(o31), extractValue(o32)))
}
